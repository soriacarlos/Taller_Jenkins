// def COLOR_MAP = [
//   'SUCCESS': 'good',
//   'FAILURE': 'danger'
// ]

// def getBuildUser() {
//   return currentBuild.rawBuild.getCause(Cause.UserIdCause).getUserId()
// }
// URL of Discord webhook for posting build notifications
      def discordURL = 'https://discord.com/api/webhooks/1029196176198733924/K7qv_nuhdAITZmWdw1qRVAAJ7OsWMvRYNb8_FoGXKuGkycrgDwqNhLP-VpcNb6NnWzNr'
      // URL of image png/jpg to place to right of Discord build notifications
      //def discordImage = 'https://blabla.png'

      def BRANCH_NAME = getCurrentBranch()
      //echo 'Current branch is' + BRANCH_NAME
      def getCurrentBranch () {
          return sh (
          script: 'git name-rev --name-only HEAD',
          returnStdout: true
          ).trim()
      }

      def discordDesc = "BRANCH_NAME: ${BRANCH_NAME} \n BRANCH_IS_PRIMARY: ${env.BRANCH_IS_PRIMARY} \n CHANGE_ID: ${env.CHANGE_ID} \n CHANGE_URL: ${env.CHANGE_URL} \n CHANGE_TITLE: ${env.CHANGE_TITLE} \n CHANGE_AUTHOR: ${env.CHANGE_AUTHOR} \n CHANGE_AUTHOR_DISPLAY_NAME: ${env.CHANGE_AUTHOR_DISPLAY_NAME} \n CHANGE_AUTHOR_EMAIL: ${env.CHANGE_AUTHOR_EMAIL} \n CHANGE_TARGET: ${env.CHANGE_TARGET} \n CHANGE_BRANCH: ${env.CHANGE_BRANCH} \n CHANGE_FORK: ${env.CHANGE_FORK} \n TAG_NAME: ${env.TAG_NAME} \n TAG_TIMESTAMP: ${env.TAG_TIMESTAMP} \n TAG_UNIXTIME: ${env.TAG_UNIXTIME} \n TAG_DATE: ${env.TAG_DATE} \n JOB_DISPLAY_URL: ${env.JOB_DISPLAY_URL} \n RUN_DISPLAY_URL: ${env.RUN_DISPLAY_URL} \n RUN_ARTIFACTS_DISPLAY_URL: ${env.RUN_ARTIFACTS_DISPLAY_URL} \n RUN_CHANGES_DISPLAY_URL: ${env.RUN_CHANGES_DISPLAY_URL} \n RUN_TESTS_DISPLAY_URL: ${env.RUN_TESTS_DISPLAY_URL} \n BUILD_NUMBER: ${env.BUILD_NUMBER} \n BUILD_ID: ${env.BUILD_ID} \n BUILD_DISPLAY_NAME: ${env.BUILD_DISPLAY_NAME} \n JOB_NAME: ${env.JOB_NAME} \n JOB_BASE_NAME: ${env.JOB_BASE_NAME} \n BUILD_TAG: ${env.BUILD_TAG} \n EXECUTOR_NUMBER: ${env.EXECUTOR_NUMBER} \n NODE_NAME: ${env.NODE_NAME} \n NODE_LABELS: ${env.NODE_LABELS} \n WORKSPACE : ${env.WORKSPACE} \n WORKSPACE_TMP: ${env.WORKSPACE_TMP} \n JENKINS_HOME: ${env.JENKINS_HOME} \n JENKINS_URL: ${env.JENKINS_URL} \n BUILD_URL: ${env.BUILD_URL} \n JOB_URL: ${env.JOB_URL}"
      def discordFooter = "footer desc with vars: ${env.JOB_BASE_NAME}` (build #${BUILD_NUMBER})"
      def discordTitle = "${BUILD_DISPLAY_NAME} (develop)"

pipeline {
  agent any

  environment {
    BUILD_USER = ''
  }

  tools {
    nodejs "node"
  }

  parameters {
    string(name: 'container_name', defaultValue: 'pagina_web', description: 'Nombre del contenedor de Docker.')
    string(name: 'image_name', defaultValue: 'pagina_img', description: 'Nombre de la imagen de Docker.')
    string(name: 'tag_image', defaultValue: 'lts', description: 'Tag de la imagen de la p√°gina')
    string(name: 'container_port', defaultValue: '80', description: 'Puerto del contenedor')
  }

  stages {
    stage('install') {
      steps {
        git branch: 'develop', url: 'https://github.com/soriacarlos/Taller_Jenkins.git'
        dir('frontend') {
          sh 'npm install'
        }
      }
    }

    stage('test') {
      steps {
        dir('frontend') {
          sh 'npm run test'
        }
      }
    }

    stage('build') {
      steps {
        dir('frontend') {
          script {
            try {
              sh 'docker stop ${container_name}'
              sh 'docker rm ${container_name}'
              sh 'docker rmi ${image_name}:${tag_image}'
            } catch (Exception e) {
              echo 'Exception occurred: ' + e.toString()
            }
          }
          sh 'npm run build'
          sh 'docker build -t ${image_name}:${tag_image} .'
        }
      }
    }

    stage('deploy') {
      steps {
        sh 'docker run -d -p ${container_port}:80 --name ${container_name} ${image_name}:${tag_image}'
      }
    }

//     stage('Notifier') {
//       steps {
//         //discordSend description: "Jenkins - Taller Jenkins", footer: "---", link: env.BUILD_URL, result: currentBuild.currentResult, title: JOB_NAME, webhookURL: "https://discord.com/api/webhooks/1029196176198733924/K7qv_nuhdAITZmWdw1qRVAAJ7OsWMvRYNb8_FoGXKuGkycrgDwqNhLP-VpcNb6NnWzNr"
//         discordSend result: currentBuild.currentResult, showChangeset: true, title: 'Jenkins - TallerJenkins', webhookURL: 'https://discord.com/api/webhooks/1029196176198733924/K7qv_nuhdAITZmWdw1qRVAAJ7OsWMvRYNb8_FoGXKuGkycrgDwqNhLP-VpcNb6NnWzNr'
//       }
//     }

  }

  post {
    always {
        discordSend description: discordDesc,
                    footer: discordFooter,
                    link: env.JOB_URL,
                    result: currentBuild.currentResult,
                    title: discordTitle,
                    webhookURL: discordURL,
                    successful: currentBuild.resultIsBetterOrEqualTo('SUCCESS')
                    //thumbnail: discordImage
//       discordSend result: currentBuild.currentResult,
//                   showChangeset: true,
//                   description: "*ESTADO:* ${currentBuild.currentResult} \n *Autor:* ${customUsername} \n **"
//                   title: 'Jenkins - TallerJenkins',
//                   webhookURL: 'https://discord.com/api/webhooks/1029196176198733924/K7qv_nuhdAITZmWdw1qRVAAJ7OsWMvRYNb8_FoGXKuGkycrgDwqNhLP-VpcNb6NnWzNr'
    }
  }
//   post {
//     always {
//
//       script {
//         BUILD_USER = getBuildUser()
//       }
//
//       slackSend channel: 'jenkins-example',
//                 color: COLOR_MAP[currentBuild.currentResult],
//                 message: "*${currentBuild.currentResult}:* Job ${env.JOB_NAME} build ${env.BUILD_NUMBER} by ${BUILD_USER} \n Container executed ${container_name} \n More info at ${env.BUILD_URL}"
//
//     }
//   }
}
